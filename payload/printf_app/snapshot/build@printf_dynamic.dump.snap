---
source: xtask/src/main.rs
expression: from_utf8(&output.stdout).unwrap()
---
printf:     file format elf64-littleriscv
printf
architecture: riscv:rv64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000000630

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x0000000000000188 memsz 0x0000000000000188 flags r--
  INTERP off    0x00000000000001c8 vaddr 0x00000000000001c8 paddr 0x00000000000001c8 align 2**0
         filesz 0x000000000000001a memsz 0x000000000000001a flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x0000000000000794 memsz 0x0000000000000794 flags r-x
    LOAD off    0x0000000000000e30 vaddr 0x0000000000001e30 paddr 0x0000000000001e30 align 2**12
         filesz 0x0000000000000250 memsz 0x0000000000000288 flags rw-
 DYNAMIC off    0x0000000000000e40 vaddr 0x0000000000001e40 paddr 0x0000000000001e40 align 2**3
         filesz 0x00000000000001c0 memsz 0x00000000000001c0 flags rw-
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000e30 vaddr 0x0000000000001e30 paddr 0x0000000000001e30 align 2**0
         filesz 0x00000000000001d0 memsz 0x00000000000001d0 flags r--

Dynamic Section:
  NEEDED               libc.so
  INIT                 0x0000000000000000
  FINI                 0x0000000000000000
  INIT_ARRAY           0x0000000000001e30
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000001e38
  FINI_ARRAYSZ         0x0000000000000008
  HASH                 0x00000000000001e8
  GNU_HASH             0x0000000000000238
  STRTAB               0x00000000000003b0
  SYMTAB               0x0000000000000260
  STRSZ                0x00000000000000ac
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000002008
  PLTRELSZ             0x0000000000000060
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000000568
  RELA                 0x0000000000000460
  RELASZ               0x0000000000000168
  RELAENT              0x0000000000000018
  FLAGS_1              0x0000000008000000
  RELACOUNT            0x0000000000000004

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001a  00000000000001c8  00000000000001c8  000001c8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .hash         0000004c  00000000000001e8  00000000000001e8  000001e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .gnu.hash     00000024  0000000000000238  0000000000000238  00000238  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .dynsym       00000150  0000000000000260  0000000000000260  00000260  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynstr       000000ac  00000000000003b0  00000000000003b0  000003b0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .rela.dyn     00000108  0000000000000460  0000000000000460  00000460  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .rela.plt     00000060  0000000000000568  0000000000000568  00000568  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .plt          00000060  00000000000005d0  00000000000005d0  000005d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text         00000140  0000000000000630  0000000000000630  00000630  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .rodata       0000001f  0000000000000770  0000000000000770  00000770  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .eh_frame     00000004  0000000000000790  0000000000000790  00000790  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init_array   00000008  0000000000001e30  0000000000001e30  00000e30  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 12 .fini_array   00000008  0000000000001e38  0000000000001e38  00000e38  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 13 .dynamic      000001c0  0000000000001e40  0000000000001e40  00000e40  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 14 .data         00000008  0000000000002000  0000000000002000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 15 .got          00000078  0000000000002008  0000000000002008  00001008  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 16 .bss          00000038  0000000000002080  0000000000002080  00001080  2**3
                  ALLOC
 17 .comment      0000001b  0000000000000000  0000000000000000  00001080  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000000001c8 l    d  .interp	0000000000000000 .interp
00000000000001e8 l    d  .hash	0000000000000000 .hash
0000000000000238 l    d  .gnu.hash	0000000000000000 .gnu.hash
0000000000000260 l    d  .dynsym	0000000000000000 .dynsym
00000000000003b0 l    d  .dynstr	0000000000000000 .dynstr
0000000000000460 l    d  .rela.dyn	0000000000000000 .rela.dyn
0000000000000568 l    d  .rela.plt	0000000000000000 .rela.plt
00000000000005d0 l    d  .plt	0000000000000000 .plt
0000000000000630 l    d  .text	0000000000000000 .text
0000000000000770 l    d  .rodata	0000000000000000 .rodata
0000000000000790 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000001e30 l    d  .init_array	0000000000000000 .init_array
0000000000001e38 l    d  .fini_array	0000000000000000 .fini_array
0000000000001e40 l    d  .dynamic	0000000000000000 .dynamic
0000000000002000 l    d  .data	0000000000000000 .data
0000000000002008 l    d  .got	0000000000000000 .got
0000000000002080 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    df *ABS*	0000000000000000 Scrt1.c
0000000000000000 l    df *ABS*	0000000000000000 crtstuff.c
000000000000066a l     F .text	0000000000000000 deregister_tm_clones
000000000000068c l     F .text	0000000000000000 register_tm_clones
00000000000006b8 l     F .text	0000000000000000 __do_global_dtors_aux
0000000000002080 l     O .bss	0000000000000001 completed.1
0000000000001e38 l     O .fini_array	0000000000000000 __do_global_dtors_aux_fini_array_entry
0000000000000706 l     F .text	0000000000000000 frame_dummy
0000000000002088 l     O .bss	0000000000000030 object.0
0000000000001e30 l     O .init_array	0000000000000000 __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000 printf.c
0000000000000000 l    df *ABS*	0000000000000000 crtstuff.c
0000000000000790 l     O .eh_frame	0000000000000000 __FRAME_END__
0000000000001e40 l     O *ABS*	0000000000000000 _DYNAMIC
00000000000005d0 l     O *ABS*	0000000000000000 _PROCEDURE_LINKAGE_TABLE_
0000000000002038 l     O *ABS*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000       F *UND*	0000000000000000 printf
0000000000002800 g       *ABS*	0000000000000000 .hidden __global_pointer$
0000000000002080 g       .got	0000000000000000 __SDATA_BEGIN__
0000000000002008 g     O .got	0000000000000000 .hidden __TMC_END__
0000000000000000       F *UND*	0000000000000000 puts
0000000000000000  w    F *UND*	0000000000000000 __cxa_finalize
0000000000000000       F *UND*	0000000000000000 sleep
0000000000002000 g     O .data	0000000000000000 .hidden __dso_handle
0000000000000000  w    F *UND*	0000000000000000 _init
0000000000000000  w      *UND*	0000000000000000 __deregister_frame_info
0000000000000000  w      *UND*	0000000000000000 _ITM_registerTMCloneTable
0000000000000630 g     F .text	0000000000000000 _start
0000000000000648 g     F .text	0000000000000022 _start_c
00000000000020b8 g       .bss	0000000000000000 __BSS_END__
0000000000000000  w      *UND*	0000000000000000 _ITM_deregisterTMCloneTable
0000000000002080 g       .bss	0000000000000000 __bss_start
000000000000072e g     F .text	0000000000000042 main
0000000000000000  w    F *UND*	0000000000000000 _fini
0000000000002000 g       .data	0000000000000000 __DATA_BEGIN__
0000000000002080 g       .got	0000000000000000 _edata
00000000000020b8 g       .bss	0000000000000000 _end
0000000000000000       F *UND*	0000000000000000 __libc_start_main
0000000000000000  w      *UND*	0000000000000000 __register_frame_info



Disassembly of section .plt:

00000000000005d0 <.plt>:
 5d0:	00002397          	auipc	t2,0x2
 5d4:	41c30333          	sub	t1,t1,t3
 5d8:	a383be03          	ld	t3,-1480(t2) # 2008 <__TMC_END__>
 5dc:	fd430313          	addi	t1,t1,-44
 5e0:	a3838293          	addi	t0,t2,-1480
 5e4:	00135313          	srli	t1,t1,0x1
 5e8:	0082b283          	ld	t0,8(t0)
 5ec:	000e0067          	jr	t3

00000000000005f0 <printf@plt>:
 5f0:	00002e17          	auipc	t3,0x2
 5f4:	a28e3e03          	ld	t3,-1496(t3) # 2018 <printf>
 5f8:	000e0367          	jalr	t1,t3
 5fc:	00000013          	nop

0000000000000600 <puts@plt>:
 600:	00002e17          	auipc	t3,0x2
 604:	a20e3e03          	ld	t3,-1504(t3) # 2020 <puts>
 608:	000e0367          	jalr	t1,t3
 60c:	00000013          	nop

0000000000000610 <sleep@plt>:
 610:	00002e17          	auipc	t3,0x2
 614:	a18e3e03          	ld	t3,-1512(t3) # 2028 <sleep>
 618:	000e0367          	jalr	t1,t3
 61c:	00000013          	nop

0000000000000620 <__libc_start_main@plt>:
 620:	00002e17          	auipc	t3,0x2
 624:	a10e3e03          	ld	t3,-1520(t3) # 2030 <__libc_start_main>
 628:	000e0367          	jalr	t1,t3
 62c:	00000013          	nop

Disassembly of section .text:

0000000000000630 <_start>:
 630:	00002197          	auipc	gp,0x2
 634:	1d018193          	addi	gp,gp,464 # 2800 <__global_pointer$>
 638:	850a                	mv	a0,sp
 63a:	00002597          	auipc	a1,0x2
 63e:	80658593          	addi	a1,a1,-2042 # 1e40 <_DYNAMIC>
 642:	ff017113          	andi	sp,sp,-16
 646:	a009                	j	648 <_start_c>

0000000000000648 <_start_c>:
 648:	410c                	lw	a1,0(a0)
 64a:	00850613          	addi	a2,a0,8
 64e:	4781                	li	a5,0
 650:	00002717          	auipc	a4,0x2
 654:	a2073703          	ld	a4,-1504(a4) # 2070 <_fini>
 658:	00002697          	auipc	a3,0x2
 65c:	9f06b683          	ld	a3,-1552(a3) # 2048 <_init>
 660:	00002517          	auipc	a0,0x2
 664:	a0853503          	ld	a0,-1528(a0) # 2068 <_GLOBAL_OFFSET_TABLE_+0x30>
 668:	bf65                	j	620 <__libc_start_main@plt>

000000000000066a <deregister_tm_clones>:
 66a:	00002517          	auipc	a0,0x2
 66e:	99e50513          	addi	a0,a0,-1634 # 2008 <__TMC_END__>
 672:	00002797          	auipc	a5,0x2
 676:	99678793          	addi	a5,a5,-1642 # 2008 <__TMC_END__>
 67a:	00a78863          	beq	a5,a0,68a <deregister_tm_clones+0x20>
 67e:	00002797          	auipc	a5,0x2
 682:	9e27b783          	ld	a5,-1566(a5) # 2060 <_ITM_deregisterTMCloneTable>
 686:	c391                	beqz	a5,68a <deregister_tm_clones+0x20>
 688:	8782                	jr	a5
 68a:	8082                	ret

000000000000068c <register_tm_clones>:
 68c:	00002517          	auipc	a0,0x2
 690:	97c50513          	addi	a0,a0,-1668 # 2008 <__TMC_END__>
 694:	00002597          	auipc	a1,0x2
 698:	97458593          	addi	a1,a1,-1676 # 2008 <__TMC_END__>
 69c:	8d89                	sub	a1,a1,a0
 69e:	4035d793          	srai	a5,a1,0x3
 6a2:	91fd                	srli	a1,a1,0x3f
 6a4:	95be                	add	a1,a1,a5
 6a6:	8585                	srai	a1,a1,0x1
 6a8:	c599                	beqz	a1,6b6 <register_tm_clones+0x2a>
 6aa:	00002797          	auipc	a5,0x2
 6ae:	9ae7b783          	ld	a5,-1618(a5) # 2058 <_ITM_registerTMCloneTable>
 6b2:	c391                	beqz	a5,6b6 <register_tm_clones+0x2a>
 6b4:	8782                	jr	a5
 6b6:	8082                	ret

00000000000006b8 <__do_global_dtors_aux>:
 6b8:	1141                	addi	sp,sp,-16
 6ba:	e022                	sd	s0,0(sp)
 6bc:	00002417          	auipc	s0,0x2
 6c0:	9c440413          	addi	s0,s0,-1596 # 2080 <completed.1>
 6c4:	00044783          	lbu	a5,0(s0)
 6c8:	e406                	sd	ra,8(sp)
 6ca:	eb95                	bnez	a5,6fe <__do_global_dtors_aux+0x46>
 6cc:	00002797          	auipc	a5,0x2
 6d0:	9747b783          	ld	a5,-1676(a5) # 2040 <__cxa_finalize>
 6d4:	c791                	beqz	a5,6e0 <__do_global_dtors_aux+0x28>
 6d6:	00002517          	auipc	a0,0x2
 6da:	92a53503          	ld	a0,-1750(a0) # 2000 <__dso_handle>
 6de:	9782                	jalr	a5
 6e0:	f8bff0ef          	jal	ra,66a <deregister_tm_clones>
 6e4:	00002797          	auipc	a5,0x2
 6e8:	96c7b783          	ld	a5,-1684(a5) # 2050 <__deregister_frame_info>
 6ec:	c791                	beqz	a5,6f8 <__do_global_dtors_aux+0x40>
 6ee:	00000517          	auipc	a0,0x0
 6f2:	0a250513          	addi	a0,a0,162 # 790 <__FRAME_END__>
 6f6:	9782                	jalr	a5
 6f8:	4785                	li	a5,1
 6fa:	00f40023          	sb	a5,0(s0)
 6fe:	60a2                	ld	ra,8(sp)
 700:	6402                	ld	s0,0(sp)
 702:	0141                	addi	sp,sp,16
 704:	8082                	ret

0000000000000706 <frame_dummy>:
 706:	00002797          	auipc	a5,0x2
 70a:	9727b783          	ld	a5,-1678(a5) # 2078 <__register_frame_info>
 70e:	cf99                	beqz	a5,72c <frame_dummy+0x26>
 710:	1141                	addi	sp,sp,-16
 712:	e406                	sd	ra,8(sp)
 714:	00002597          	auipc	a1,0x2
 718:	97458593          	addi	a1,a1,-1676 # 2088 <object.0>
 71c:	00000517          	auipc	a0,0x0
 720:	07450513          	addi	a0,a0,116 # 790 <__FRAME_END__>
 724:	9782                	jalr	a5
 726:	60a2                	ld	ra,8(sp)
 728:	0141                	addi	sp,sp,16
 72a:	b78d                	j	68c <register_tm_clones>
 72c:	b785                	j	68c <register_tm_clones>

000000000000072e <main>:
 72e:	1101                	addi	sp,sp,-32
 730:	ec06                	sd	ra,24(sp)
 732:	e822                	sd	s0,16(sp)
 734:	1000                	addi	s0,sp,32
 736:	00000517          	auipc	a0,0x0
 73a:	03a50513          	addi	a0,a0,58 # 770 <main+0x42>
 73e:	ec3ff0ef          	jal	ra,600 <puts@plt>
 742:	478d                	li	a5,3
 744:	fef42623          	sw	a5,-20(s0)
 748:	fec42783          	lw	a5,-20(s0)
 74c:	85be                	mv	a1,a5
 74e:	00000517          	auipc	a0,0x0
 752:	03250513          	addi	a0,a0,50 # 780 <main+0x52>
 756:	e9bff0ef          	jal	ra,5f0 <printf@plt>
 75a:	fec42783          	lw	a5,-20(s0)
 75e:	853e                	mv	a0,a5
 760:	eb1ff0ef          	jal	ra,610 <sleep@plt>
 764:	4781                	li	a5,0
 766:	853e                	mv	a0,a5
 768:	60e2                	ld	ra,24(sp)
 76a:	6442                	ld	s0,16(sp)
 76c:	6105                	addi	sp,sp,32
 76e:	8082                	ret
